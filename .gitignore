# Operating System Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
*~

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~
.project
.settings/
.classpath

# Logs
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Backend (Go) specific files
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
tweetchat-backend
chat-backend.exe

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# Database files (development databases)
*.db
*.sqlite
*.sqlite3
chat.db

# Backend build artifacts
Backend/tweetchat-backend
Backend/chat-backend.exe

# Frontend (Rust/Leptos) specific files
# Generated by Cargo
# will have compiled files and executables
Frontend/target/

# Generated WASM files
Frontend/pkg/
Frontend/dist/

# These are backup files generated by rustfmt
Frontend/**/*.rs.bk
Backend/**/*.rs.bk

# MSVC Windows builds of rustc generate these, which are not tracked
*.pdb

# Frontend build scripts and temporary files
Frontend/build.bat
Frontend/build.sh
Frontend/serve.bat
Frontend/simple-build.bat

# Frontend temporary files
Frontend/frontend.txt
Frontend/simple-chat.html

# Keep source files - explicitly allow Rust source files
!Frontend/src/
!Frontend/src/**
!**/*.rs

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Temporary files
*.tmp
*.temp
*.bak
*.backup

# Node.js (if any frontend tooling uses it)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Coverage reports
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
